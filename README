This is documentation for turkopticon-dev, the development branch of Turkopticon.

six@wtf.tw
20 Jul 2011
Last update 28 Sep 2011

Turkopticon helps workers on Amazon's Mechanical Turk platform report and avoid shady employers ('requesters') by reviewing them on a third-party platform.

In turkopticon-dev, we attempt to refactor the existing codebase and introduce some new features to address a range of problems.

1 Implemented Interactions

+ Login
+ Logout
+ Register
  + Validation
    + username must be present and unique
    + email address must be present and valid format
    + password must be present and match confirmation
+ Change password
  + password must be present and match confirmation
  + appropriate error message displayed otherwise
+ Protected paths
  + Requester list
  + Reviews
+ Requester table and model
+ Review table and model
+ Add timestamps and auto-timestamping to everything
+ Emails
  + Email address verification (automatically on register; user can resend)
  + Password change
  + Password reset
+ Requester list
  + displays scammer and TOS violation flag count
  + displays 'no data' (rather than 0) if no data for an attribute
  + nil values not computed in averages
+ Review list

1.5 In progress

+ Review a requester
  + Done
    + Form (get '/review', views/review.haml)
    + Action on submit review (post '/review')
    + Don't allow review without requester name and ID
    + Test what happens if I enter name and ID of a requester already in DB
    + Edit review
  + Todo
    + Require verified, non-throwaway email address before posting

2 To Implement

+ Auto-cache requester avg_val and review_count after review save
+ Write new-data-scraper
+ Copy database
+ Settings
+ Search
+ Blog
+ FAQ
+ Flagging
+ Moderation
  + if moderator says a requester is scammer or TOS viol, indicate
+ Bring UI in line with turkoptidev.differenceengines.com/reputation-ui-screens/All%20reviews.htm
+ Link AMT ID to user account (from:dahn "thumbnail sketch")
+ What to do with multiple reviews of one requester by same person?
  + Proposal: Only use most recent review in average, but don't delete old data

3 Interactions to be Tested

+ None right now

4 Other Todos

+ Logging
+ Error alerts
+ Analytics

5 Non-critical Todos

+ Move Requester.visualize into a helper

6 Dependencies

+ sinatra
+ activerecord
+ sinatra-activerecord
+ haml
+ pony
+ sqlite3